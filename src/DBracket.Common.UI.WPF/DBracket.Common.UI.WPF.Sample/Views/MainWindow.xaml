<Window x:Class="DBracket.Common.UI.WPF.Sample.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DBracket.Common.UI.WPF.Sample.Views"
        xmlns:paths="clr-namespace:DBracket.Common.UI.WPF.Sample.PathExamples"
        xmlns:commonHelpers="clr-namespace:DBracket.Common.UI.WPF.Helpers;assembly=DBracket.Common.UI.WPF"
        xmlns:commonControls="clr-namespace:DBracket.Common.UI.WPF.Controls;assembly=DBracket.Common.UI.WPF"
        xmlns:charts="clr-namespace:DBracket.Common.UI.WPF.Charts.Controls;assembly=DBracket.Common.UI.WPF.Charts"
        xmlns:chartComponents="clr-namespace:DBracket.Common.UI.WPF.Charts.Controls.Components;assembly=DBracket.Common.UI.WPF.Charts"
        xmlns:vms="clr-namespace:DBracket.Common.UI.WPF.Sample.PathExamples.ViewModel"
        xmlns:views="clr-namespace:DBracket.Common.UI.WPF.Sample.Views.Examples"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="MainWindow"
        Height="800"
        Width="1200"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type={x:Type vms:MainViewModel}}">

    <Window.DataContext>
        <vms:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <SolidColorBrush x:Key="DBracket.Colors.Menu.Background">#1E2025</SolidColorBrush>
        <SolidColorBrush x:Key="DBracket.Colors.ContentMenu.Background">#26272B</SolidColorBrush>
        
        

        <ControlTemplate x:Key="DBracket.Common.UI.Styles.Button.Base2"
                         TargetType="{x:Type Button}">
            <Grid>

                <Border x:Name="PART_Host"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter x:Name="PART_Content_Host"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="Green" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TestButton2"
               TargetType="{x:Type Button}">
            <Setter Property="Template"
                    Value="{StaticResource DBracket.Common.UI.Styles.Button.Base2}" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
        </Style>
        <ControlTemplate x:Key="DBracket.Common.UI.Styles.ToggleButton.Base"
                         TargetType="{x:Type ToggleButton}">
            <Grid>

                <Border x:Name="PART_Host"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter x:Name="PART_Content_Host"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>

                <Popup x:Name="PART_PopUp"
                       IsOpen="{TemplateBinding IsChecked}"
                       Width="250"
                       Height="400">
                    <Grid Background="WhiteSmoke">
                        <TextBlock Text="Test" />

                    </Grid>
                </Popup>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="Green" />
                </Trigger>

                <Trigger Property="IsChecked"
                         Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="250"
                                                 Duration="0:0:0.4"
                                                 Storyboard.TargetName="PART_PopUp"
                                                 Storyboard.TargetProperty="Width" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="0"
                                                 Duration="0:0:0.4"
                                                 Storyboard.TargetName="PART_PopUp"
                                                 Storyboard.TargetProperty="Width" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TestToggleButton"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Template"
                    Value="{StaticResource DBracket.Common.UI.Styles.ToggleButton.Base}" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
        </Style>

        <Style TargetType="{x:Type commonControls:SideMenuItem}"
               BasedOn="{StaticResource DBracket.Common.UI.WPF.SideMenuItem}">
            <Setter Property="Background"
                    Value="{DynamicResource ResourceKey=DBracket.Colors.Menu.Background}" />
        </Style>
    </Window.Resources>

    <Grid Background="{DynamicResource ResourceKey=DBracket.Colors.Menu.Background}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border CornerRadius="0"
                Margin="8,20,8,20"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{DynamicResource ResourceKey=DBracket.Colors.Menu.Background}">
            <commonControls:SideMenu Style="{StaticResource DBracket.Common.UI.WPF.SideMenu}"
                                     Margin="0,30,0,0"
                                     Width="400">
                <commonControls:SideMenu.Items>
                    <commonControls:SideMenuItem Header="Test1"
                                                 Command="{Binding MenuCommand}"
                                                 CommandParameter="Test1">
                        <commonControls:SideMenuItem.IconContent>
                            <commonControls:Icon IconType="Accept_PicolIcons" 
                                                 Width="15"
                                                 Height="15"/>
                        </commonControls:SideMenuItem.IconContent>

                        <commonControls:SideMenuItem.SubItems>
                            <commonControls:SideMenuItem Header="Test1-1"
                                                         Command="{Binding MenuCommand}"
                                                         CommandParameter="Test1-1" />
                            <commonControls:SideMenuItem Header="Test1-2"
                                                         Command="{Binding MenuCommand}"
                                                         CommandParameter="Test1-2" />
                            <commonControls:SideMenuItem Header="Test1-3"
                                                         Command="{Binding MenuCommand}"
                                                         CommandParameter="Test1-3" />
                        </commonControls:SideMenuItem.SubItems>
                    </commonControls:SideMenuItem>
                    <commonControls:SideMenuItem Header="Test2"
                                                 Command="{Binding MenuCommand}"
                                                 CommandParameter="Test2" />
                    <commonControls:SideMenuItem Header="Test3"
                                                 Command="{Binding MenuCommand}"
                                                 CommandParameter="Test3" />
                    <commonControls:SideMenuItem Header="Test4"
                                                 Command="{Binding MenuCommand}"
                                                 CommandParameter="Test4" />
                </commonControls:SideMenu.Items>
            </commonControls:SideMenu>

            <!--<TreeView>
                <TreeView.Items>
                    <TreeViewItem Header="Test1">
                        <TreeViewItem.Items>
                            <MenuItem Header="Test1-1" />
                        </TreeViewItem.Items>
                    </TreeViewItem>
                    <MenuItem Header="Test2" />
                    <TreeViewItem Header="Test3" />
                    <TreeViewItem Header="Test4" />
                    <TreeViewItem Header="Test5" />
                    <TreeViewItem Header="Test6" />
                </TreeView.Items>
            </TreeView>-->


            <!--<views:SideBar>
                <views:SideBar.Items>
                    <views:SideBarItem Name="Test">
                        <views:SideBarItem.SubItems>
                            <views:SideBarItem Name="Test-1" />
                            <views:SideBarItem Name="Test-2" />
                            <views:SideBarItem Name="Test-3" />
                        </views:SideBarItem.SubItems>
                    </views:SideBarItem>
                    <views:SideBarItem Name="Test2" />
                    <views:SideBarItem Name="Test3" />
                    <views:SideBarItem Name="Test4" />
                    <views:SideBarItem Name="Test5" />
                </views:SideBar.Items>
            </views:SideBar>-->

            <!--<commonControls:Button Style="{StaticResource TestButton}"
                                   CornerRadius="20"
                                   Content="Test" />-->
            <!--<StackPanel>
                <Button Style="{StaticResource TestButton2}"
                        Content="Test2"
                        Width="150"
                        Height="40" 
                        Command="{Binding Commands}"
                        CommandParameter="Test"/>

                <ToggleButton Style="{StaticResource TestToggleButton}"
                        Content="Test2"
                        Width="150"
                        Height="40" />
            </StackPanel>-->
        </Border>

        <Border CornerRadius="20"
                Margin="8,20,8,20"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{DynamicResource ResourceKey=DBracket.Colors.ContentMenu.Background}">

            <ScrollViewer>
                <paths:Example3 />
                <!--<ItemsControl ItemsSource="{Binding Items}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            -->
                <!--<Image x:Name="Main"
                                   Source="{Binding Source}"
                                   Width="200"
                                   Height="100" />-->
                <!--
                                <commonControls:AsyncImage DefaultSource="C:\Users\D-Bracket\Desktop\1.png"
                                                           ImagePath="{Binding ImagePath}"
                                                           Width="200"
                                                           Height="100"
                                                           ToolTip="{Binding ImagePath}"/>
                            </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
            </ItemsControl>-->
            </ScrollViewer>



            <!--<commonControls:AsyncImage ImagePath="Test" />-->
        </Border>
    </Grid>




    <!--<Grid>
        <Grid Background="#1C1B1F">
            <Grid.Resources>
                <commonHelpers:BindingProxy x:Key="BindingProxy"
                                            DataSource="{Binding}" />
            </Grid.Resources>


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>

            <Button HorizontalAlignment="Left"
                    Grid.Column="1"
                    Content="Open Flyout"
                    Command="{Binding Commands}"
                    CommandParameter="OpenFlyout" />

            <charts:ColumnChart Style="{StaticResource DBracket.WPF.Styles.Charts.ColumnChart}"
                                Grid.Column="1"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                x:Name="ColumnChart">
                <charts:ColumnChart.Columns>
                    <chartComponents:Column Value="5" />
                    <chartComponents:Column Value="{Binding Source={StaticResource BindingProxy}, Path=DataSource.Value, UpdateSourceTrigger=PropertyChanged}" />
                </charts:ColumnChart.Columns>

            </charts:ColumnChart>
        </Grid>

        <commonControls:Flyout Style="{StaticResource DBracket.Common.UI.Styles.Flyout}"
                               IsOpened="{Binding IsFlyoutOpened}"
                               Dock="Left">
            <commonControls:Flyout.Content>
                <Grid Background="Gray"
                      Width="300">
                    <StackPanel>
                        <TextBlock Text="Hello"
                                   Foreground="White"
                                   FontSize="16" />

                        <Button VerticalAlignment="Bottom"
                                HorizontalAlignment="Stretch"
                                Content="Close Flyout"
                                Command="{Binding Commands}"
                                CommandParameter="CloseFlyout" />
                    </StackPanel>
                </Grid>
            </commonControls:Flyout.Content>
        </commonControls:Flyout>
    </Grid>-->
</Window>